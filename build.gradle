apply plugin: 'cpp'

model {
    components {
        // TODO merge components settings
        // TODO Reimplement to have library-only assembly
        // chromalib(NativeLibrarySpec) {
        //     binaries.all {
        //         linker.args '-L/usr/local/lib', '-lSDLmain', '-lSDL', '-Wl,-framework,Cocoa'
        //         if (toolChain in Gcc) {
        //             cppCompiler.args "-O3", "-march=native", "-Wa,-q"
        //         }
        //     }
        // }
        chroma(NativeExecutableSpec) {
            binaries.all {
                linker.args '-L/usr/local/lib', '-lSDLmain', '-lSDL', '-Wl,-framework,Cocoa'
                if (toolChain in Gcc) {
                    //if (buildType == buildTypes.debug) {
                    //    cppCompiler.args '-g', '-O0', '-std=c++11'
                    //} else {
                        cppCompiler.args "-O3", "-march=native", "-Wa,-q", '-std=c++11'
                    //}
                }
            }
        }
    }
}
